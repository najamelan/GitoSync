#!/usr/bin/env ruby

module Gitomate

require 'rubygems'
require 'thor'
require 'logger'
require 'pp'
require 'yaml'
require_relative '../lib/gitomate'

class Gitomate < Thor


class_option                                                 \
                                                             \
	  :'verbose'                                              \
	, :aliases   => '-v'                                      \
	, :type      => :boolean                                  \
	, :default   => false                                     \
	, :desc      => 'Show more feedback'                      \



def initialize( *args )

	super
	@log    = Feedback.get( 'bin/gitomate' )

	@log.info 'loading gitomate'
	@config = Config.get

end



desc 'sync', 'Syncs all configured repositories between gitolite and file system'

def sync( *args )

	# @log.info ARGV.inspect
	# @log.info ENV.to_h.to_yaml

end



desc 'status', 'Test the system for compliance with the configuration and report'

def status

	@sync = Sync.new( @config.defaults, @config.userset )

	@sync.sync
	# @log.debug @repos.to_yaml
	# @log.debug @config.options.to_yaml
	# @log.info args

end





end # class gitomate

end # module gitomate


Gitomate::Gitomate.start
